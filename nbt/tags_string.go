// Code generated by "stringer -type=TagType -output tags_string.go -linecomment"; DO NOT EDIT.

package nbt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TagTypeEnd-0]
	_ = x[TagTypeByte-1]
	_ = x[TagTypeShort-2]
	_ = x[TagTypeInt-3]
	_ = x[TagTypeLong-4]
	_ = x[TagTypeFloat-5]
	_ = x[TagTypeDouble-6]
	_ = x[TagTypeByteArray-7]
	_ = x[TagTypeString-8]
	_ = x[TagTypeList-9]
	_ = x[TagTypeCompound-10]
	_ = x[TagTypeIntArray-11]
	_ = x[TagTypeLongArray-12]
}

const _TagType_name = "EndByteShortIntLongFloatDoubleByte ArrayStringListCompoundInt ArrayLong Array"

var _TagType_index = [...]uint8{0, 3, 7, 12, 15, 19, 24, 30, 40, 46, 50, 58, 67, 77}

func (i TagType) String() string {
	if i >= TagType(len(_TagType_index)-1) {
		return "TagType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TagType_name[_TagType_index[i]:_TagType_index[i+1]]
}
